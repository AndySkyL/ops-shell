#!/bin/bash

ACTION=$1
back_dir=/code_bak/$(date +%F_%T)

start_mainten() {

sudo mv /usr/local/nginx/conf/conf.d/ost.conf /usr/local/nginx/conf/conf.d/ost.conf.pro
sudo mv /usr/local/nginx/conf/conf.d/ost.maintenance.conf.man /usr/local/nginx/conf/conf.d/ost.maintenance.conf
sudo /usr/local/nginx/sbin/nginx -s reload 
RETVAL=$? 
echo "$(date +%F' '%T) switch to maintenance mode." >> /tmp/code_deploy.log

}

start_product() {

sudo mv /usr/local/nginx/conf/conf.d/ost.maintenance.conf /usr/local/nginx/conf/conf.d/ost.maintenance.conf.man
sudo mv /usr/local/nginx/conf/conf.d/ost.conf.pro /usr/local/nginx/conf/conf.d/ost.conf
sudo /usr/local/nginx/sbin/nginx -s reload 
RETVAL=$?
echo "$(date +%F' '%T) switch to product mode." >> /tmp/code_deploy.log
} 

code_bak() {

[ ! -d "$back_dir" ]&& mkdir -p "$back_dir"
cd  /usr/local/nginx/
tar zcf $back_dir/ost_home.tar.gz ost_home
sleep 1
if [ -f $back_dir/ost_home.tar.gz ] 
then
    echo "1" >> /tmp/backup_status.log
    echo "$(date +%F' '%T) code backup finished" >>/tmp/code_deploy.log
fi
}

main() {
> /tmp/backup_status.log
case $ACTION in

        backup)
        start_mainten
        if [ $RETVAL -ne 0 ] 
        then
            echo "$(date +%F' '%T) switch to maintance mode failed." >> /tmp/code_deploy.log 
            exit $RETVAL
        else
            code_bak
        fi
        ;;

        deploy)
        start_product
		if [ $RETVAL -ne 0 ] 
        then
            echo "$(date +%F' '%T) switch to product mode failed." >> /tmp/code_deploy.log 
            exit $RETVAL
        ;;

        *)
        echo "USAGE: $0 backup|deploy" 
esac
}

main
